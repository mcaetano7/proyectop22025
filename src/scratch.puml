@startuml PIIProyecto2025

' Paquete principal
package "Dominio" {
    
    class Program {
        - mapa: Mapa
        - jugadores: List<Jugador>
        - turnoActual: int
        + iniciarJuego()
        + avanzarTurno()
        + obtenerEstado()
    }
    
    class Facade {
    + iniciarJuego()
    + comando(jugador: Jugador, comando: String): string
    + estado(jugador: Jugador): string
    }

    class Jugador{
        - nombre: String
        - civilizacion: Civilizacion
        - recursos: Recursos
        - aldeanos: List<Aldeano>
        - edificios: List<Edificio>
        - unidades: List<UnidadMilitar>
        + recolectarRecurso(tipo: TipoRecurso, ubicacion: Coordenada)
        + construir(edificio: Edificio, ubicacion: Coordenada)
        + entrenarUnidad(tipo: TipoUnidad)
        + moverUnidad(idUnidad: int, destino: Coordenada)
        + atacar(idAtacante: int, objetivo: Coordenada)
        + accesible: boolean
        + info()
    }

    class Mapa {
        - tama√±o: int
        - celdas: List<Celda>
        + obtenerCelda(coordenada: Coordenada): Celda
    }

    class Celda{
        - coordenada: Coordenada
        - contenido: List<ElementoMapa>
    }

    class Coordenada {
        - x: int
        - y: int
    }

    interface IRecurso {
        - tipo: TipoRecurso
        - cantidad: int
        - tasaRecoleccion: int
        + mover(coordenada: Coordenada) : edificio
        + agregar(tipo: TipoRecurso, cantidad: int)
        + consumir(tipo: TipoRecurso, cantidad: int): boolean
        + alerta: boolean 
        
    }

    enum TipoRecurso {
        Alimento
        Madera
        Oro 
        Piedra
    }
    
    abstract class Civilizacion{
        - nombre: string
        - bonificacion: List<String>
        - unidadEspecial: UnidadMilitar
    
    }
    
    interface IEdificio {
        - nombre: List<String>
        - tipo: TipoEdificio
        - capacidad: int
        - ubicacion: Coordenada
        - recursos: List<string>
    }
    
    class UnidadMilitar implements IEdificio{
        - tipo: String
        - ataque: int
        - defensa: int
        - velocidad: int
        - ubicacion: Coordenada
    }
    
    class Cuartel implements IEdificio{
    
    }
    
    class Almacen implements IEdificio{
    
    }
    
    class Casa implements IEdificio{
    }
    
    class CentroCivico implements IEdificio{
    
    }

    
    class UnidadCivil implements IEdificio {
        - tipo: String
        - ubicacion: Coordenada
        - cantidad: int
        - creadoPor: Edificio
    
    }
    
    class Recursos implements IRecurso {
        - recursos: Map<TipoRecurso, int>
        + agregar(tipo: TipoRecurso, cantidad: int)
        + consumir(tipo: TipoRecurso, cantidad: int): boolean
        + mover(...) ...
        + alerta: boolean
    }
    
    abstract ActividadEconomica{
      
    }
       
    class Construir extends Recurso{
    + contarDistancia()
    + mostrarTiempo()    
    }
    
    class Recoleccion extends Recursos{
    - tasaRecoleccion: int
    + contarDistancia()
    }
  
  Program --> Mapa
  Program --> Jugador
  Mapa --> Celda
  Jugador --> Civilizacion
  Jugador --> UnidadMilitar
  Jugador --> UnidadCivil
  Jugador --> Recursos
  Celda --> Coordenada
  UnidadMilitar --> Coordenada
  Construir --> TipoRecurso
  Recoleccion --> TipoRecurso 
}

@enduml
