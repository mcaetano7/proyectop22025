@startuml PIIProyecto2025


package "age" {

    class Facade {
    - juego: Mapa<String> Juego
    + NuevoJuego(idJuego: String): String
    + UnirseJuego(idJuego: String, nombrePlayer: String, civilizacion: String): String
    + ProcesarComando(idJuego: String, nombrePlayer: String, comando: String): String
    + obtenerEstado(idJuego: String, Player: String): String
    }
    
    class Juego {
        - mapa: Mapa
        - Playeres: List<Player>
        - turnoActual: int
        + iniciarJuego()
        + avanzarTurno()
        + obtenerEstado()
        + verificarVictoria(): boolean
        + obtenerGanador(): Player
    }

    class Player {
        - nombre: String
        - civilizacion: Civilizacion
        - recurso: Recurso
        - aldeanos: List<Aldeano>
        - edificios: List<Edificio>
        - unidades: List<UnidadMilitar>
        - poblacionActual: int
        - poblacionMaxima: int
        + recolectarRecurso(tipo: TipoRecurso, ubicacion: Coordenada, nombre: String)
        + construir(edificio: Edificio, ubicacion: Coordenada)
        + entrenarUnidad(tipo: TipoUnidad)
        + moverUnidad(idUnidad: int, destino: Coordenada)
        + atacar(idAtacante: int, objetivo: Coordenada)
    }

    class Mapa {
        - tama√±o: int
        - celdas: List<Celda>
        + obtenerCelda(coordenada: Coordenada): Celda
    }

    class Celda {
        - coordenada: Coordenada
        - contenido: List<ElementoMapa>
    }

    class Coordenada {
        - x: int
        - y: int
    }

    interface ElementoMapa {
    }

    class RecursoMapa implements ElementoMapa {
        - tipo: TipoRecurso
        - cantidad: int
    }

    class TipoRecurso {
        Alimento
        Madera
        Oro
        Piedra
    }

    class RecursoPlayer {
        - alimento: int
        - madera: int
        - oro: int
        - piedra: int
        + agregar(tipo: TipoRecurso, cantidad: int)
        + consumir(tipo: TipoRecurso, cantidad: int): boolean
    }

    class Civilizacion {
        - nombre: String
        - bonificaciones: List<String>
        - unidadEspecial: TipoUnidad
    }

    abstract class Edificio implements ElementoMapa {
        - ubicacion: Coordenada
        - vida: int
        - owner: Player
    }

    class CentroCivico extends Edificio {
        - capacidadAldeanos: int
    }

    class Almacen extends Edificio {
        - tipo: TipoRecurso
        - capacidad: int
    }

    class Casa extends Edificio {
        - capacidadPoblacion: int
    }

    class Cuartel extends Edificio {
    }

    abstract class Unidad implements ElementoMapa {
        - id: int
        - ubicacion: Coordenada
        - vida: int
        - velocidad: int
        - owner: Player
    }

    class Aldeano extends Unidad {
        + recolectar(recurso: Recurso, edificio: Almacen)
    }

    class UnidadMilitar extends Unidad {
        + ataque: int
        + defensa: int
    }

    class Infanteria extends UnidadMilitar {
        + ataque: int 
        + defensa: int
    
    }

    class Arquero extends UnidadMilitar {
        + ataque: int 
        + defensa: int 
    }

    class Caballeria extends UnidadMilitar {
        + ataque: int 
        + defensa: int 
    }
    
    Juego "1" --> "*" Player
    Player "1" --> "1" Civilizacion
    Player "1" --> "1" RecursoPlayer
    Mapa "1" --> "*" Celda
    Celda "1" --> "*" ElementoMapa

}

@enduml
